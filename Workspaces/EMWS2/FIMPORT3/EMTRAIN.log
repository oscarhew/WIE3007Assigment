*------------------------------------------------------------*
* Training Log
Date:                January 07, 2024
Time:                01:15:52
*------------------------------------------------------------*
14716  proc freq data=EMWS2.FIMPORT3_VariableSet noprint;
14717  table ROLE*LEVEL/out=WORK.FIMPORT3META;
14718  run;

NOTE: There were 13 observations read from the data set EMWS2.FIMPORT3_VARIABLESET.
NOTE: The data set WORK.FIMPORT3META has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.11 seconds
      cpu time            0.00 seconds
      

14719  proc print data=WORK.FIMPORT3META label noobs;
14720  var ROLE LEVEL COUNT;
14721  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
14722  title9 ' ';
14723  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
14724  run;

NOTE: There were 4 observations read from the data set WORK.FIMPORT3META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.13 seconds
      cpu time            0.00 seconds
      

14725  title10;

14726  %let EMEXCEPTIONSTRING=;
15065  *------------------------------------------------------------*;
15066  * FIMPORT3: Generation of macros and macro variables;
15067  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15068  *------------------------------------------------------------*;

15069  %let EMEXCEPTIONSTRING=;
15070  *------------------------------------------------------------*;
15071  * TRAIN: FIMPORT3;
15072  *------------------------------------------------------------*;
15073  %let EM_ACTION = TRAIN;
15074  %let syscc = 0;
15075  /* Fimport.source */
15076  %macro main;
15077        %if %upcase(&EM_ACTION) = CREATE %then %do;
15078           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
15079           %include temp;
15080           filename temp;
15081           %create;
15082        %end;
15083        %else
15084        %if %upcase(&EM_ACTION) = TRAIN %then %do;
15085           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
15086           %include temp;
15087           filename temp;
15088           %train;
15089        %end;
15090        %else
15091        %if %upcase(&EM_ACTION) = UPDATE %then %do;
15092           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
15093           %include temp;
15094           filename temp;
15095           %update;
15096        %end;
15097        %else
15098        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
15099           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15100           %include temp;
15101           filename temp;
15102           %property;
15103        %end;
15104         %else
15105        %if %upcase(&EM_ACTION) = SCORE %then %do;
15106           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
15107           %include temp;
15108           filename temp;
15109           %score;
15110        %end;
15111        %else
15112        %if %upcase(&EM_ACTION) = REPORT %then %do;
15113           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
15114           %include temp;
15115           filename temp;
15116           %report;
15117        %end;
15118        %else
15119        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
15120           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15121           %include temp;
15122           filename temp;
15123           %openvariableset;
15124        %end;
15125        %else
15126        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
15127           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15128           %include temp;
15129           filename temp;
15130           %closevariableset;
15131        %end;
15132  %mend main;
15133  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_TRAIN.SOURCE.
15134 +%EM_GETNAME(key=USERIMPORTFILE, type=FILE, extension=txt);
15135 +%macro appendExt;
15136 +   data _null_;
15137 +      tempuif =  trim("&EM_USER_USERIMPORTFILE");
15138 +      rfile = reverse(tempuif);
15139 +      period = indexc(rfile,".");
15140 +      uif = substr(tempuif, 1, length(tempuif)- period+1);
15141 +      newuif = trim(uif)||trim("&EM_PROPERTY_FILETYPE");
15142 +      call symput("EM_USER_USERIMPORTFILE",%bquote(newuif));
15143 +   run;
15144 +%mend appendExt;
15146 +%macro getNobs(ds);
15147 + %global dset nobs;
15148 + %let dset=&ds;
15149 + %let dsid = %sysfunc(open(&dset));
15150 + %if &dsid %then %do;
15151 +      %let nobs =%sysfunc(attrn(&dsid,nobs));
15152 +      %let rc = %sysfunc(close(&dsid));
15153 +   %end;
15154 + %else %put open for data set &dset failed - %sysfunc(sysmsg());
15155 +%mend getNobs;
15156 +%macro keepordrop;
15157 +  proc contents data=work.importfile noprint
15158 +  out=work.importattrs;
15159 +  run;
15160 +  %getNobs(work.importattrs);
15161 +  data _null_;
15162 +    set  work.importattrs;
15163 +    call symput("varname"||left(_n_),name);
15164 +  run;
15166 +  %put nobs=&nobs  maxcols=&EM_PROPERTY_MAXCOLS;
15167 +  /* importattrs contains 1 observation for each VARIABLE in the data set. */
15168 +  %if &nobs > &EM_PROPERTY_MAXCOLS %then %do;
15169 +     %let diff = %eval(&nobs - &EM_PROPERTY_MAXCOLS);
15170 +     %put diff=&diff;
15171 +     %if %eval(&diff ge &EM_PROPERTY_MAXCOLS) %then %do;
15172 +         %let kORd = keep;
15173 +             %let start=1;
15174 +             %let end = &EM_PROPERTY_MAXCOLS;
15175 +       %end;
15176 +     %else %do;
15177 +         %let kORd = drop;
15178 +             %let start = &EM_PROPERTY_MAXCOLS + 1;
15179 +             %let end = &nobs;
15180 +       %end;
15181 +     data &em_user_data;
15182 +        set &em_user_data;
15183 +        &kORd
15184 +        %do i = &start %to &end;
15185 +            &&varname&i
15186 +         %end;
15187 +        ;
15188 +     run;
15189 +%end;
15190 +%mend keepordrop;
15191 +%macro dropformatvars;
15192 +   %put fmtcnt=&fmtcnt;
15193 +   data new;
15194 +     set work.importfile;
15195 +     %do i = 1 %to &fmtcnt;
15196 +       x1zy&i =put(&&varname&i,&&fmt&i);
15197 +     %end;
15198 +   run;
15199 +   data new;
15200 +     set new;
15201 +     drop
15202 +     %do i = 1 %to &fmtcnt;
15203 +     &&varname&i
15204 +     %end;
15205 +     ;
15206 +   run;
15207 +   proc datasets library=work nolist;
15208 +     modify new;
15209 +     %do i = 1 %to &fmtcnt;
15210 +     rename x1zy&i=&&varname&i;
15211 +     %end;
15212 +   run; quit;
15213 +   data work.importfile;
15214 +     set new;
15215 +   run;
15216 +%mend;
15218 +%macro procimport(out=);
15219 +   %if %upcase(&EM_PROPERTY_FILETYPE)=MDB %then %do;
15220 +      proc import table=%sysfunc(trim(&EM_PROPERTY_ACCESSTABLE))
15221 +         out=&out
15222 +         dbms = ACCESS
15223 +         replace;
15224 +         database="%trim(&_IFILENAME)"
15225 +   %end;
15226 +   %else %do;
15227 +       proc import datafile="%trim(&_IFILENAME)"
15228 +          out=&out
15230 +      %put filetype=*&EM_PROPERTY_FILETYPE.*;
15231 +      %put delimiter=*&EM_PROPERTY_DELIMITER.*;
15232 +      %if %upcase(&EM_PROPERTY_FILETYPE) ^= TXT %then %do;
15233 +         dbms=&EM_PROPERTY_FILETYPE
15234 +      %end;
15235 +      %else %do;
15236 +         dbms=TAB
15237 +      %end;
15238 +      /* Work around for the following defects:S0560899 and S0560009.   */
15239 +      %let sasEnv=%sysfunc(getlocenv());
15240 +      %if %upcase(&EM_PROPERTY_FILETYPE) = XLS and %upcase(&sasEnv) ^= SBCS %then %do;
15241 +         dbms=EXCEL
15242 +      %end;
15244 +      replace;
15245 +      %if %substr(%upcase(&EM_PROPERTY_FILETYPE),1,2)=WK | %upcase(&EM_PROPERTY_FILETYPE)=XLS
15246 +       | %upcase(&EM_PROPERTY_FILETYPE)=DLM | %upcase(&EM_PROPERTY_FILETYPE)=CSV
15247 +       | %upcase(&EM_PROPERTY_FILETYPE)=TAB | %upcase(&EM_PROPERTY_FILETYPE)=TXT %then %do;
15248 +        %if %length(&EM_PROPERTY_NAMEROW) > 0 %then %do;
15249 +            getnames=&EM_PROPERTY_NAMEROW;
15250 +        %end;
15251 +      %end;
15252 +      %if %upcase(&EM_PROPERTY_FILETYPE)=CSV | %upcase(&EM_PROPERTY_FILETYPE)=DLM |
15253 +          %upcase(&EM_PROPERTY_FILETYPE=TXT)  %then %do;
15254 +         %if (%length(%trim(%bquote(&EM_PROPERTY_DELIMITER))) > 0) %then %do;
15255 +            %if "%upcase(&EM_PROPERTY_DELIMITER)"="SP" %then %do;
15256 +               delimiter=" ";
15257 +            %end;
15258 +            %else %if "%upcase(&EM_PROPERTY_DELIMITER)"="TAB" %then %do;
15259 +               /* Do not specifiy a delimiter */
15260 +            %end;
15261 +            %else %do;
15262 +               delimiter="&EM_PROPERTY_DELIMITER";
15263 +            %end;
15264 +         %end;
15265 +         %if %eval(&EM_PROPERTY_SKIPROWS > 0) %then %do;
15266 +            datarow=&EM_PROPERTY_SKIPROWS;
15267 +            /* Guessingrows must be >= skiprows */
15268 +            %if %eval(&EM_PROPERTY_GUESSROWS < &EM_PROPERTY_SKIPROWS ) %then %do;
15269 +              %let EM_PROPERTY_GUESSROWS = &EM_PROPERTY_SKIPROWS;
15270 +            %end;
15271 +         %end;
15272 +         %if %eval(&EM_PROPERTY_GUESSROWS > 0) %then %do;
15273 +            guessingrows=&EM_PROPERTY_GUESSROWS;
15274 +         %end;
15275 +       %end;
15276 +      %if %upcase(&EM_PROPERTY_FILETYPE)=DTA | %upcase(&EM_PROPERTY_FILETYPE)=JMP
15277 +                 | %upcase(&EM_PROPERTY_FILETYPE)=SAV %then %do;
15278 +            FMTLIB = work.formats;
15279 +      %end;
15280 +   %end;
15281 +   run;
15282 +%mend procimport;
15284 +%macro train;
15286 +   %let vvnString = %sysfunc(getoption(validvarname));
15288 +   %em_getname(key=DATA,           type=DATA);
15289 +   %em_getname(key=EMCMETADEFAULT, type=DATA);
15290 +   %em_getname(key=EMTMETADEFAULT, type=DATA);
15291 +   %em_getname(key=EMSTATDEFAULT, type=DATA);
15293 +   %appendExt;
15295 +   %let _IFILENAME = %nrbquote(%trim(&EM_PROPERTY_IFILENAME));
15296 +   %if %upcase(&EM_PROPERTY_IMPORTTYPE) = LOCAL %then %do;
15297 +       %if %nrbquote(%sysfunc(fileexist(&EM_USER_USERIMPORTFILE))) %then
15298 +           %let _IFILENAME = %nrbquote(&EM_USER_USERIMPORTFILE);
15299 +   %end;
15301 +   %if ^%sysfunc(fileexist(%nrbquote(&_IFILENAME))) %then %do;
15302 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTRAININGCODEFILE,%nrbquote(&_IFILENAME);
15303 +       %goto endtrain;
15304 +   %end;
15306 +   options validvarname=ANY;
15307 +   %procimport(out=work.importfile);
15309 +   %if %upcase(&EM_PROPERTY_FILETYPE) = DTA | %upcase(&EM_PROPERTY_FILETYPE) = JMP
15310 +              | %upcase(&EM_PROPERTY_FILETYPE)=SAV %then %do;
15311 +      %global fmtcnt;
15312 +      %let fmtcnt=0;
15313 +      proc contents data=work.importfile out=work.impattrs noprint;
15314 +      run;
15315 +      data _null_;
15316 +        set work.impattrs;
15317 +        if _n_=1 then i=0;
15318 +        if substr(format,1,1) ^= "$" and length(trim(format)) > 1 then do;
15319 +           i = i+1;
15320 +           varname = substr(name, 1, length(name));
15321 +           call symput("fmt"||left(i), trim(format)||".");
15322 +           call symput("varname"||left(i), varname);
15323 +           call symput("fmtcnt",left(i));
15324 +      end;
15325 +      retain i;
15326 +     run;
15327 +    %if &fmtcnt > 0 %then %do;
15328 +       %dropformatvars;
15329 +    %end;
15330 +    proc datasets lib=work memtype=data nolist;
15331 +        modify importfile;
15332 +        attrib _all_ format=;
15333 +    run;
15334 +    quit;
15335 +   %end;
15337 +   %let _fimportObs  = 0;
15338 +   %let _fimportVars = 0;
15339 +   %if %sysfunc(exist(work.importFile)) %then %do;
15340 +       %let dsid = %sysfunc(open(work.importFile));
15341 +       %if &dsid %then %do;
15342 +           %let _fimportObs  = %sysfunc(attrn(&dsid, NOBS));
15343 +           %let _fimportVars = %sysfunc(attrn(&dsid, NVARS));
15344 +       %let dsid = %sysfunc(close(&dsid));
15345 +       %end;
15346 +   %end;
15348 +   %if ^&_fimportObs %then %do;
15349 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.FILE_NO_OBS;
15350 +       %goto endtrain;
15351 +   %end;
15352 +   %if ^&_fimportVars %then %do;
15353 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.FILE_NO_VARS;
15354 +       %goto endtrain;
15355 +   %end;
15357 +   data &em_user_data;
15358 +      set work.importfile(obs=&EM_PROPERTY_MAXROWS);
15359 +   run;
15360 +   %keepordrop;
15362 +   %em_getname(key=EMSTAT,     type=DATA);
15364 +   proc datasets lib=&em_lib nolist;
15365 +      delete &em_nodeid._EMSTATDEFAULT &em_nodeid._EMINFO;
15366 +   run;
15368 +   %if "&em_property_advancedadvisor" eq "Y" %then %do;
15369 +        %EmAdviseColumns(&em_user_data, applyIntervalLevelLowerLimit=Y,
15370 +            intervalLevelLowerLimit=20, applyMaxPercentMissing=Y,
15371 +            maxPercentMissing=50, applyMaxClassLevels=Y,
15372 +            maxClassLevels=20, identifyEmptyColumns=Y,
15373 +            outdata=&em_user_EMCMETADEFAULT,
15374 +            computeStat=Y, statisticData=&em_user_EMSTATDEFAULT);
15376 +        data &em_user_emcmetadefault;
15377 +           set &em_user_emcmetadefault;
15378 +           drop nlevel pctmiss min max mean std skewness kurtosis;
15379 +        run;
15381 +        data &em_data_eminfo;
15382 +           length TARGET KEY $32  DATA $43;
15383 +           TARGET=""; KEY="STATS"; DATA="&em_user_emstatdefault"; output;
15384 +        run;
15386 +        %let EM_META_ADVISOR=ADVANCED;
15388 +   %end;
15389 +   %else %do;
15390 +       %EmAdviseColumns(&em_user_data, applyIntervalLevelLowerLimit=N,
15391 +            applyMaxPercentMissing=N, applyMaxClassLevels=N,
15392 +            identifyEmptyColumns=N,   maxLevelDetection=0,
15393 +            outdata=&em_user_EMCMETADEFAULT, computeStat=N, statisticData=WORK.STATISTIC);
15395 +            %if "&em_property_summarize" eq "Y" %then %do;
15396 +                %em_getname(key=EMSTAT,  type=DATA);
15397 +                data &em_data_eminfo;
15398 +                   length TARGET KEY $32  DATA $43;
15399 +                   TARGET=""; KEY="STATS"; DATA="&em_user_emstat"; output;
15400 +                run;
15401 +            %end;
15403 +        %let EM_META_ADVISOR=BASIC;
15405 +   %end;
15407 +   %em_getname(key=VVNLABEL, type=FILE, extension=sas);
15408 +   data _null_;
15409 +      fname = '_text';
15410 +      rc=filename(fname, "&em_user_vvnlabel");
15411 +      if ^rc and fexist(fname) then
15412 +         rc=fdelete(fname);
15413 +     rc=filename(fname);
15414 +   run;
15417 +   /* Validvarname Case */
15418 +   %let newNameFlag = 0;
15419 +   %if %sysfunc(exist(&em_user_EMCMETADEFAULT)) %then %do;
15420 +       %let dsid = %sysfunc(open(&em_user_EMCMETADEFAULT));
15421 +        %if &dsid %then %do;
15422 +            %let newNameFlag = %sysfunc(varnum(&dsid, NEWNAME));
15423 +            %let dsid = %sysfunc(close(&dsid));
15424 +       %end;
15425 +   %end;
15427 +   %if %sysevalf(&newNameFlag>0) %then %do;
15428 +       proc contents data=work.importfile noprint out=work._any(keep=VARNUM NAME LABEL);
15429 +       run;
15430 +       proc sort data=work._any; by VARNUM; run; quit;
15432 +       options validvarname=V7;
15434 +       %procimport(out=work.importfile2);
15436 +       options validvarname=ANY;
15438 +       proc contents data=work.importfile2 noprint out=work._v7(rename=(NAME=V7NAME) keep=VARNUM NAME LABEL);
15439 +       run;
15440 +       proc sort data=work._v7; by varnum; run; quit;
15442 +       filename _FI "&em_user_vvnlabel";
15443 +       data work._names;
15444 +          length string $200;
15445 +          merge work._v7 work._any;
15446 +          by VARNUM;
15447 +          file _FI;
15448 +          if V7NAME ne NAME then do;
15449 +             string = trim(V7NAME)!!'= "'!!tranwrd(trim(NAME), '"', '""')!!'"n;';
15450 +             put string;
15451 +             if LABEL eq '' then do;
15452 +                string = 'Label '!!trim(V7NAME)!!"='"!!tranwrd(trim(NAME), "'", "''")!!"';";
15453 +                put string;
15454 +             end;
15455 +             string='drop "'!!tranwrd(trim(NAME), '"', '""')!!'"n;';
15456 +             put string;
15457 +          end;
15458 +          drop string;
15459 +       run;
15460 +       data &em_user_data;
15461 +          set &em_user_data;
15462 +          %if %sysfunc(fileexist(%nrbquote(&em_user_vvnlabel))) %then %do;
15463 +              filename _FI "&em_user_vvnlabel";
15464 +              %inc _FI;
15465 +             filename _FI;
15466 +          %end;
15467 +       run;
15469 +       proc sort data=&em_user_EMCMETADEFAULT; by NAME; run;
15470 +       proc sort data=work._names;             by NAME; run;
15472 +       data &em_user_EMCMETADEFAULT;
15473 +         merge  &em_user_EMCMETADEFAULT _names;
15474 +         by NAME;
15475 +         length DROP $1;
15476 +         DROP='N';
15477 +         if NEWNAME ne NAME then do;
15478 +            if LABEL eq '' then do;
15479 +               LABEL = NAME;
15480 +            end;
15481 +            NAME=V7NAME;
15482 +         end;
15483 +         drop NEWNAME V7NAME VARNUM;
15484 +       run;
15486 +       proc datasets lib=work nolist;
15487 +          delete _any _v7 _names importfile2;
15488 +       run;
15489 +       quit;
15491 +   %end;
15492 +   %else %do;
15493 +       data &em_user_EMCMETADEFAULT;
15494 +          set &em_user_EMCMETADEFAULT;
15495 +          length DROP $1;
15496 +          DROP='N';
15497 +       run;
15498 +   %end;
15500 +    %EmAdviseTable(&em_user_data, outdata=&em_user_EMTMETADEFAULT, newdataflag=Y);
15502 +   data _temp;
15503 +      set &em_user_emtmetadefault(rename=(ROLE=PORT MEMNAME=DATASET CRDATE=MODTIME));
15504 +      keep PORT LIBNAME DATASET MODTIME COLUMNMETA COLUMNMETAMODTIME NOBS;
15505 +      PORT='DATA'; COLUMNMETA="&em_nodeid._EMCMETADEFAULT";
15506 +      COLUMNMETAMODTIME=MODTIME;
15507 +   run;
15508 +   proc sort data=&em_data_importset;
15509 +      by PORT;
15510 +   run;
15511 +   data &em_data_importset;
15512 +      merge &em_data_importset _temp;
15513 +      by PORT;
15514 +      if PORT='DATA' then ROLE="&em_property_role";
15515 +   run;
15517 +    %em_getname(key=VARIABLESETDELTA, type=FILE, extension=txt);
15519 +    %if %sysfunc(exist(&em_user_emcmetadefault)) %then %do;
15520 +        %if %sysfunc(fileexist(&em_user_variablesetdelta)) %then %do;
15521 +            filename x "&em_user_variablesetdelta";
15522 +            data &em_data_variableset;
15523 +               set &em_user_emcmetadefault;
15524 +               %inc X;
15525 +            run;
15526 +            filename x;
15527 +        %end;
15528 +        %else %do;
15529 +            data &em_data_variableset;
15530 +               set &em_user_emcmetadefault;
15531 +            run;
15532 +        %end;
15533 +    %end;
15535 +   %if %sysfunc(exist(&em_data_variableset)) and %sysfunc(exist(&em_user_emcmetadefault)) %then %do;
15536 +      proc compare compare=&em_data_variableset base=&em_user_emcmetadefault
15537 +         noprint outnoequal outbase outcomp out=_DiffMeta noprint;
15538 +         id NAME;
15539 +      run;
15541 +         filename x1 "&EM_FILE_CDELTA_TRAIN";
15542 +         data _null_;
15543 +            length string $200;
15544 +            set _DiffMeta end=eof;
15545 +            where _type_='COMPARE';
15546 +            file x1;
15547 +            string = 'if NAME="'!!strip(NAME)!!'" then do;';
15548 +            put string;
15549 +            string = '   ROLE="'!!strip(ROLE)!!'";';
15550 +            put string;
15551 +            string=  '   LEVEL="'!!strip(LEVEL)!!'";';
15552 +            put string;
15553 +            string = '   ORDER="'!!strip(ORDER)!!'";';
15554 +            put string;
15555 +            put 'end;';
15556 +            if drop='Y' then do;
15557 +               string='if NAME="'!!strip(NAME)!!'" then delete;';
15558 +               put string;
15559 +            end;
15560 +            if eof then
15561 +               put 'drop DROP;';
15562 +         run;
15564 +         %em_getname(key=DELTACODE,      type=FILE, extension=txt);
15565 +         filename x2 "&em_user_deltacode";
15566 +         %em_copyfile(infref=x1, outfref=x2);
15567 +         filename x1;
15568 +         filename x2;
15570 +         %em_getname(key=VARIABLESETDELTA, type=FILE, extension=txt);
15571 +         filename x "&em_user_variablesetdelta";
15572 +         data _null_;
15573 +            length string $200;
15574 +            set _DiffMeta end=eof;
15575 +            where _type_='COMPARE';
15576 +            file x;
15577 +            string = 'if NAME="'!!strip(NAME)!!'" then do;';
15578 +            put string;
15579 +            string = '   ROLE="'!!strip(ROLE)!!'";';
15580 +            put string;
15581 +            string=  '   LEVEL="'!!strip(LEVEL)!!'";';
15582 +            put string;
15583 +            string = '   ORDER="'!!strip(ORDER)!!'";';
15584 +            put string;
15585 +            string = '   DROP="'!!strip(DROP)!!'";';
15586 +            put string;
15587 +            put 'end;';
15588 +         run;
15589 +         filename x;
15590 +       proc datasets lib=work nolist;
15591 +          delete _DiffMeta;
15592 +       run;
15594 +       data &em_data_exportset;
15595 +          set &em_data_exportset;
15596 +          if NODEPORT='TRAIN' then do;
15597 +             ROLE="&em_property_role";
15598 +             COLUMNMETAMODTIME=datetime();
15599 +             MODTIME=datetime();
15600 +             DATASET="&em_nodeid._train";
15601 +             COLUMNMETA="&em_nodeid._CMeta_TRAIN";
15602 +             DELTACODE="CDelta_TRAIN";
15603 +             APPLYDELTA='Y';
15604 +             EXPORT='Y';
15605 +             NEEDUPDATE='Y';
15607 +            %if "&em_property_advancedadvisor" eq "Y" %then %do;
15608 +                EMINFO="&em_data_eminfo";
15609 +                EMINFOMODTIME=datetime();
15610 +            %end;
15611 +            %else %do;
15612 +                EMINFO='';
15613 +                EMINFOMODTIME=.;
15614 +            %end;
15615 +          end;
15616 +       run;
15617 +   %end;
15619 +  proc contents data=&em_user_data;
15620 +  run;
15621 +  proc datasets library=work nolist;
15622 +   delete importfile importattrs new;
15623 +   quit;
15624 +  run;
15626 +  /* Reset VALIDVARNAME to original settings */
15627 +  options validvarname=&vvnString;
15629 +  %endtrain:
15630 +%mend train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

filetype=*csv*
delimiter=*,*

15631   /**********************************************************************
15632   *   PRODUCT:   SAS
15633   *   VERSION:   9.4
15634   *   CREATOR:   External File Interface
15635   *   DATE:      07JAN24
15636   *   DESC:      Generated SAS Datastep Code
15637   *   TEMPLATE SOURCE:  (None Specified.)
15638   ***********************************************************************/
15639      data WORK.IMPORTFILE    ;
15640      %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
15641      infile 'C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\USERIMPORTFILE.csv' delimiter = ','
15642   MISSOVER DSD lrecl=32767 firstobs=2 ;
15643         informat "fixed acidity"N best32. ;
15644         informat "volatile acidity"N best32. ;
15645         informat "citric acid"N best32. ;
15646         informat "residual sugar"N best32. ;
15647         informat chlorides best32. ;
15648         informat "free sulfur dioxide"N best32. ;
15649         informat "total sulfur dioxide"N best32. ;
15650         informat density best32. ;
15651         informat pH best32. ;
15652         informat sulphates best32. ;
15653         informat alcohol best32. ;
15654         informat quality best32. ;
15655         informat category $3. ;
15656         format "fixed acidity"N best12. ;
15657         format "volatile acidity"N best12. ;
15658         format "citric acid"N best12. ;
15659         format "residual sugar"N best12. ;
15660         format chlorides best12. ;
15661         format "free sulfur dioxide"N best12. ;
15662         format "total sulfur dioxide"N best12. ;
15663         format density best12. ;
15664         format pH best12. ;
15665         format sulphates best12. ;
15666         format alcohol best12. ;
15667         format quality best12. ;
15668         format category $3. ;
15669      input
15670                  "fixed acidity"N
15671                  "volatile acidity"N
15672                  "citric acid"N
15673                  "residual sugar"N
15674                  chlorides
15675                  "free sulfur dioxide"N
15676                  "total sulfur dioxide"N
15677                  density
15678                  pH
15679                  sulphates
15680                  alcohol
15681                  quality
15682                  category $
15683      ;
15684      if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
15685      run;

NOTE: The infile 'C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\USERIMPORTFILE.csv' is:
      Filename=C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\USERIMPORTFILE.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=421532,
      Last Modified=02Jan2024:17:34:32,
      Create Time=02Jan2024:17:34:29

NOTE: 6497 records were read from the infile 'C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\USERIMPORTFILE.csv'.
      The minimum record length was 56.
      The maximum record length was 78.
NOTE: The data set WORK.IMPORTFILE has 6497 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

6497 rows created in WORK.IMPORTFILE from C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and 
Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\USERIMPORTFILE.csv.
  
  
  
NOTE: WORK.IMPORTFILE data set was successfully created.
NOTE: The data set WORK.IMPORTFILE has 6497 observations and 13 variables.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.58 seconds
      cpu time            0.07 seconds
      


NOTE: There were 6497 observations read from the data set WORK.IMPORTFILE.
NOTE: The data set EMWS2.FIMPORT3_DATA has 6497 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: The data set WORK.IMPORTATTRS has 13 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      23:137   
NOTE: There were 13 observations read from the data set WORK.IMPORTATTRS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

nobs=13  maxcols=10000

NOTE: The file EMWS2.FIMPORT3_EMSTATDEFAULT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS2.FIMPORT3_EMINFO (memtype=DATA) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


15686  %let SYSCC = 0;
15687  %let _dsidTable = 0;
15688  %let _engineTable =;
15689  data _null_;
15690  dsid = open('EMWS2.FIMPORT3_DATA');
15691  call symput('_dsidTable', strip(put(dsid, best.)));
15692  if dsid then do;
15693  call symput('_engineTable', attrc(dsid, 'ENGINE'));
15694  dsid = close(dsid);
15695  end;
15696  run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

15697  options fmterr;
15698  data _metaTestView;
15699  set EMWS2.FIMPORT3_DATA;
15700  if _N_=1 then do;
15701  output;
15702  stop;
15703  end;
15704  run;

NOTE: There were 1 observations read from the data set EMWS2.FIMPORT3_DATA.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

15705  proc contents data=EMWS2.FIMPORT3_DATA
15706  out=WORK.M1H3CCHT noprint;
15707  run;

NOTE: The data set WORK.M1H3CCHT has 13 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

15708  data WORK.M1H3CCHT;
15709  length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
15710  label NAME =;
15711  set WORK.M1H3CCHT(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
15712  if itype = 1 then type = 'N';
15713  else type = 'C';
15714  if formatl > 0 then do;
15715  if format ne '' then do;
15716  if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
15717  else format = strip(format)!!strip(put(formatl, best12.))!!'.';
15718  end;
15719  else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
15720  end;
15721  else if format ne '' then format = strip(format)!!'.';
15722  if informl > 0 then do;
15723  if informat ne ' ' then do;
15724  if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
15725  else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
15726  end;
15727  else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
15728  end;
15729  else if informat ne '' then informat = strip(informat)!!'.';
15730  if idxusage = 'NONE' then index ="N";
15731  else index = "Y";
15732  indextype = idxusage;
15733  drop idxusage itype formatl formatd informl informd;
15734  run;

NOTE: There were 13 observations read from the data set WORK.M1H3CCHT.
NOTE: The data set WORK.M1H3CCHT has 13 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

15735  data WORK.M1H3CCHT;
15736  length UNAME $64;
15737  set WORK.M1H3CCHT;
15738  UNAME = upcase(NAME);
15739  run;

NOTE: There were 13 observations read from the data set WORK.M1H3CCHT.
NOTE: The data set WORK.M1H3CCHT has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

15743  data WORK.M08X0C8F;
15744  drop UNAME;
15745  set WORK.M08X0C8F;
15746  run;

NOTE: There were 13 observations read from the data set WORK.M08X0C8F.
NOTE: The data set WORK.M08X0C8F has 13 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.18 seconds
      cpu time            0.03 seconds
      


NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: The data set WORK._ANY has 13 observations and 3 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 13 observations read from the data set WORK._ANY.
NOTE: The data set WORK._ANY has 13 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

filetype=*csv*
delimiter=*,*

16006   /**********************************************************************
16007   *   PRODUCT:   SAS
16008   *   VERSION:   9.4
16009   *   CREATOR:   External File Interface
16010   *   DATE:      07JAN24
16011   *   DESC:      Generated SAS Datastep Code
16012   *   TEMPLATE SOURCE:  (None Specified.)
16013   ***********************************************************************/
16014      data WORK.IMPORTFILE2    ;
16015      %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
16016      infile 'C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\USERIMPORTFILE.csv' delimiter = ','
16017   MISSOVER DSD lrecl=32767 firstobs=2 ;
16018         informat fixed_acidity best32. ;
16019         informat volatile_acidity best32. ;
16020         informat citric_acid best32. ;
16021         informat residual_sugar best32. ;
16022         informat chlorides best32. ;
16023         informat free_sulfur_dioxide best32. ;
16024         informat total_sulfur_dioxide best32. ;
16025         informat density best32. ;
16026         informat pH best32. ;
16027         informat sulphates best32. ;
16028         informat alcohol best32. ;
16029         informat quality best32. ;
16030         informat category $3. ;
16031         format fixed_acidity best12. ;
16032         format volatile_acidity best12. ;
16033         format citric_acid best12. ;
16034         format residual_sugar best12. ;
16035         format chlorides best12. ;
16036         format free_sulfur_dioxide best12. ;
16037         format total_sulfur_dioxide best12. ;
16038         format density best12. ;
16039         format pH best12. ;
16040         format sulphates best12. ;
16041         format alcohol best12. ;
16042         format quality best12. ;
16043         format category $3. ;
16044      input
16045                  fixed_acidity
16046                  volatile_acidity
16047                  citric_acid
16048                  residual_sugar
16049                  chlorides
16050                  free_sulfur_dioxide
16051                  total_sulfur_dioxide
16052                  density
16053                  pH
16054                  sulphates
16055                  alcohol
16056                  quality
16057                  category $
16058      ;
16059      if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
16060      run;

NOTE: The infile 'C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\USERIMPORTFILE.csv' is:
      Filename=C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\USERIMPORTFILE.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=421532,
      Last Modified=02Jan2024:17:34:32,
      Create Time=02Jan2024:17:34:29

NOTE: 6497 records were read from the infile 'C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\USERIMPORTFILE.csv'.
      The minimum record length was 56.
      The maximum record length was 78.
NOTE: The data set WORK.IMPORTFILE2 has 6497 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

6497 rows created in WORK.IMPORTFILE2 from C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and 
Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\USERIMPORTFILE.csv.
  
  
  
NOTE: WORK.IMPORTFILE2 data set was successfully created.
NOTE: The data set WORK.IMPORTFILE2 has 6497 observations and 13 variables.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
      


NOTE: The data set WORK._V7 has 13 observations and 3 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 13 observations read from the data set WORK._V7.
NOTE: The data set WORK._V7 has 13 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: The file _FI is:
      Filename=C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\VVNLABEL.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=07Jan2024:01:15:53,
      Create Time=02Jan2024:17:34:33

NOTE: 18 records were written to the file _FI.
      The minimum record length was 20.
      The maximum record length was 50.
NOTE: There were 13 observations read from the data set WORK._V7.
NOTE: There were 13 observations read from the data set WORK._ANY.
NOTE: The data set WORK._NAMES has 13 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _FI is file C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\VVNLABEL.sas.
16061 +fixed_acidity= "fixed acidity"n;
16062 +Label fixed_acidity='fixed acidity';
16063 +drop "fixed acidity"n;
16064 +volatile_acidity= "volatile acidity"n;
16065 +Label volatile_acidity='volatile acidity';
16066 +drop "volatile acidity"n;
16067 +citric_acid= "citric acid"n;
16068 +Label citric_acid='citric acid';
16069 +drop "citric acid"n;
16070 +residual_sugar= "residual sugar"n;
16071 +Label residual_sugar='residual sugar';
16072 +drop "residual sugar"n;
16073 +free_sulfur_dioxide= "free sulfur dioxide"n;
16074 +Label free_sulfur_dioxide='free sulfur dioxide';
16075 +drop "free sulfur dioxide"n;
16076 +total_sulfur_dioxide= "total sulfur dioxide"n;
16077 +Label total_sulfur_dioxide='total sulfur dioxide';
16078 +drop "total sulfur dioxide"n;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _FI has been deassigned.

NOTE: There were 6497 observations read from the data set EMWS2.FIMPORT3_DATA.
NOTE: The data set EMWS2.FIMPORT3_DATA has 6497 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 13 observations read from the data set EMWS2.FIMPORT3_EMCMETADEFAULT.
NOTE: The data set EMWS2.FIMPORT3_EMCMETADEFAULT has 13 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 13 observations read from the data set WORK._NAMES.
NOTE: The data set WORK._NAMES has 13 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 13 observations read from the data set EMWS2.FIMPORT3_EMCMETADEFAULT.
NOTE: There were 13 observations read from the data set WORK._NAMES.
NOTE: The data set EMWS2.FIMPORT3_EMCMETADEFAULT has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


NOTE: Deleting WORK._ANY (memtype=DATA).
NOTE: Deleting WORK._V7 (memtype=DATA).
NOTE: Deleting WORK._NAMES (memtype=DATA).
NOTE: Deleting WORK.IMPORTFILE2 (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


16079  %let SYSCC = 0;
16080  data EMWS2.FIMPORT3_EMTMETADEFAULT;
16081  length LIBNAME $8;
16082  LIBNAME = "EMWS2";
16083  run;

NOTE: The data set EMWS2.FIMPORT3_EMTMETADEFAULT has 1 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.10 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set EMWS2.FIMPORT3_EMTMETADEFAULT.
NOTE: The data set WORK._TEMP has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 15 observations read from the data set EMWS2.FIMPORT3_IMPORTSET.
NOTE: The data set EMWS2.FIMPORT3_IMPORTSET has 15 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 15 observations read from the data set EMWS2.FIMPORT3_IMPORTSET.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS2.FIMPORT3_IMPORTSET has 15 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file X is file C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\VARIABLESETDELTA.txt.
16112 +if NAME="quality" then do;
16113 +ROLE="TARGET";
16114 +LEVEL="NOMINAL";
16115 +ORDER="";
16116 +DROP="N";
16117 +end;
16118 +if NAME="residual_sugar" then do;
16119 +ROLE="REJECTED";
16120 +LEVEL="INTERVAL";
16121 +ORDER="";
16122 +DROP="N";
16123 +end;
NOTE: %INCLUDE (level 1) ending.

NOTE: There were 13 observations read from the data set EMWS2.FIMPORT3_EMCMETADEFAULT.
NOTE: The data set EMWS2.FIMPORT3_VARIABLESET has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: Fileref X has been deassigned.

NOTE: There were 13 observations read from the data set EMWS2.FIMPORT3_VARIABLESET.
NOTE: There were 13 observations read from the data set EMWS2.FIMPORT3_EMCMETADEFAULT.
NOTE: The data set WORK._DIFFMETA has 4 observations and 23 variables.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: The file X1 is:
      Filename=C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=07Jan2024:01:15:53,
      Create Time=02Jan2024:17:32:47

NOTE: 11 records were written to the file X1.
      The minimum record length was 4.
      The maximum record length was 33.
NOTE: There were 2 observations read from the data set WORK._DIFFMETA.
      WHERE _type_='COMPARE';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: The file X2 is:
      Filename=C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\DELTACODE.txt,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=07Jan2024:01:15:53,
      Create Time=02Jan2024:17:32:47

NOTE: 11 records were written to the file X2.
      The minimum record length was 4.
      The maximum record length was 33.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: Fileref X1 has been deassigned.
NOTE: Fileref X2 has been deassigned.

NOTE: The file X is:
      Filename=C:\Users\Oscar\Documents\Document\File need to backup\UM\Y4S1\Data Mining and Warehousing\GroupAssignment\GroupAssignment_2023\Workspaces\EMWS2\FIMPORT3\VARIABLESETDELTA.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=07Jan2024:01:15:53,
      Create Time=02Jan2024:17:32:47

NOTE: 12 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 33.
NOTE: There were 2 observations read from the data set WORK._DIFFMETA.
      WHERE _type_='COMPARE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: Fileref X has been deassigned.

NOTE: Deleting WORK._DIFFMETA (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 6 observations read from the data set EMWS2.FIMPORT3_EXPORTSET.
NOTE: The data set EMWS2.FIMPORT3_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
NOTE: The PROCEDURE CONTENTS printed page 2.


NOTE: The file WORK.NEW (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.IMPORTFILE (memtype=DATA).
NOTE: Deleting WORK.IMPORTATTRS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16124  *------------------------------------------------------------*;
16125  * End TRAIN: FIMPORT3;
16126  *------------------------------------------------------------*;

16127  *------------------------------------------------------------*;
16128  * Close any missing semi colons;
16129  *------------------------------------------------------------*;
16130  ;
16131  ;
16132  ;
16133  ;
16134  quit;
16135  *------------------------------------------------------------*;
16136  * Close any unbalanced quotes;
16137  *------------------------------------------------------------*;
16138  /*; *"; *'; */
16139  ;
16140  run;
16141  quit;
16142  /* Reset EM Options */
16143  options formchar="|----|+|---+=|-/\<>*";
16144  options nocenter ls=256 ps=10000;
16145  goptions reset=all device=GIF NODISPLAY;

